import experiments.graph.data_loader
import experiments.graph.dataset

### experiment setup ###
experiment.model = @GraphNet_v1
experiment.criterion = @GraphNetWeightedBCE
experiment.metrics = [
    @ariadne.metrics.new_precision,
    @ariadne.metrics.new_recall,
    @ariadne.metrics.new_accuracy,
    @ariadne.metrics.new_f1_score
]
experiment.optimizer = @Adam
experiment.data_loader = @GraphDataLoader_NEW
experiment.epochs = 1000
experiment.fp16_training = False
experiment.random_seed = 42
experiment.num_gpus = 3


GraphDataLoader_NEW.dataset_cls = @TorchGraphDataset
GraphDataLoader_NEW.collate_fn = @graph_collate_fn
GraphDataLoader_NEW.batch_size = 16

# dataset
TorchGraphDataset.dataset_name = 'graph/real_train'
TorchGraphDataset.cache_graphs = True
#TorchGraphDataset.override_len = 60000




#GraphBatchBucketSampler.zero_pad_available = True
#GraphBatchBucketSampler.batch_size = 4
#GraphBatchBucketSampler.shuffle = True
#GraphBatchBucketSampler.drop_last = True

### model ###
GraphNet_v1.input_dim = 5
GraphNet_v1.hidden_dim = 128
GraphNet_v1.n_iters = 1

### loss ###
GraphNetWeightedBCE.real_weight = 2.3   # 0.5 / 0.1
GraphNetWeightedBCE.fake_weight = 0.555 # 0.5 / 0.9

### optimizer ###
Adam.lr = 0.0005