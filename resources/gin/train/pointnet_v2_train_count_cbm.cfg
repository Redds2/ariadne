 # Parameters for Adam:
# ==============================================================================
Adam.lr = 0.01
#AdamW.amsgrad = True
#SGD.lr = 0.5
#SGD.nesterov = True
#RMSprop.lr = 0.1
# Parameters for BatchBucketSampler:
# ==============================================================================
BatchBucketSampler.batch_size = 64
BatchBucketSampler.drop_last = True
BatchBucketSampler.shuffle = True
BatchBucketSampler.zero_pad_available = True

# Parameters for experiment:
# ==============================================================================
experiment.criterion = @PointNetWeightedDistloss
experiment.data_loader = @PointsDataLoaderNoSampler
experiment.epochs = 1000
experiment.fp16_training = False
experiment.log_dir = 'lightning_logs'
experiment.metrics = [
    @point_net_count.custom_precision,
    @point_net_count.custom_recall,
    @point_net_dist.norm
]
experiment.model = @PointNet
experiment.optimizer = @Adam
experiment.random_seed = 42

#ariadne.metrics.precision.is_logits = True
#ariadne.metrics.precision.unpack_method = @point_net.unpack
#ariadne.metrics.recall.is_logits = True
#ariadne.metrics.recall.unpack_method = @point_net.unpack
#ariadne.metrics.accuracy.is_logits = True
#ariadne.metrics.accuracy.unpack_method = @point_net.unpack
#ariadne.metrics.f1_score.is_logits = True
#ariadne.metrics.f1_score.unpack_method = @point_net.unpack

#experiment.accumulate_grad_batches = {30: 2, 60: 4}

# Parameters for PointNet:
# ==============================================================================
PointNet.fc_layers = (8, 1)
PointNet.transform = @Transform()

# Parameters for PointNetClassificationLoss:
# ==============================================================================
#PointNetClassificationLoss_Online.alpha = 0
##PointNetClassificationLoss_Online.fake_weight = 0.3
#PointNetClassificationLoss_Online.real_weight = 0.7

# Parameters for PointsDataLoader:
# ==============================================================================
PointsDataLoaderNoSampler.collate_fn = @points_collate_fn_filter
PointsDataLoaderNoSampler.dataset = @PointsDatasetMemory
PointsDataLoaderNoSampler.drop_last = True
PointsDataLoaderNoSampler.n_train = 2000
PointsDataLoaderNoSampler.n_valid = 200
PointsDataLoaderNoSampler.batch_size = 8

# Parameters for PointsDatasetMemory:
# ==============================================================================
PointsDatasetMemory.input_dir = 'output/cbm_points_10_counts_fix'
PointsDatasetMemory.pin_mem = True

# Parameters for feature_transform/TNet:
# ==============================================================================
feature_transform/TNet.conv_layers = (8, 4)
feature_transform/TNet.k = 128
feature_transform/TNet.linear_layers = (16, 8)
feature_transform/TNet.pooling = 'mean'

# Parameters for input_transform/TNet:
# ==============================================================================
input_transform/TNet.conv_layers = (8, 4)
input_transform/TNet.k = 3
input_transform/TNet.linear_layers = (16, 8)
input_transform/TNet.pooling = 'mean'

# Parameters for Transform:
# ==============================================================================
Transform.add_top_relu = True
Transform.feature_transform = @feature_transform/TNet()
Transform.input_features_dim = 3
Transform.input_transform = @input_transform/TNet()
Transform.pooling = 'max'
Transform.top_layers = (32, 16, 8)